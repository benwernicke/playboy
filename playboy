#! /bin/sh

DIR="$HOME/Music"

ARGV=()

while [[ $# -gt 0 ]]; do
    case $1 in
        -r | --random)
            RANDOMIZE=1
            ;;
        --get-from-file)
            if ! [ "$2" ]; then
                echo "$1 requires an argument"
                exit 1
            fi
            GET_FROM_FILE="$(pwd)/$2"
            shift
            ;;
        -t | --set-tag)
            if ! [ "$2" ]; then
                echo "$1 requires an argument"
                exit 1
            fi
            SET_TAG="$2"
            shift
            ;;
        --get)
            if ! [ "$2" ]; then
                echo "$1 requires an argument"
                exit 1
            fi
            GET="$2"
            shift
            ;;
        -h | --help)
            ;;
        -e | --exclude)
            if ! [ "$2" ]; then
                echo "$1 requires an argument"
                exit 1
            fi
            EXCLUDE="$2"
            shift
            ;;
        -i | --include)
            if ! [ "$2" ]; then
                echo "$1 requires an argument"
                exit 1
            fi
            INCLUDE="$2"
            shift
            ;;
        *)
            ARGV+=("$1") # save positional arg
            ;;
    esac
    shift
done

cd "$DIR"

download () {
    sleep 1s
    if ! [ "$1" ]; then
        echo "Download requires a url"
        exit 1
    fi
    if ! [ "$2" ]; then
        echo "Download requires tags"
        exit 1
    fi
    FILE="$(date +"%s").m4a"
    yt-dlp "$1" --extract-audio --format "ba[ext=m4a]" -o "$FILE"
    if ! [ "$?" ]; then
        echo "something went wrong"
        exit 1
    fi
    ficor --add-file "$FILE" -t "$2" --set-info "$1"
}

if [ "$GET_FROM_FILE" ]; then
    while read -r LINE; do
        set -- $LINE
        download $1 $2
    done <"$GET_FROM_FILE"
elif [ "$GET" ]; then
    if ! [ "$SET_TAG" ]; then
        echo "--get requires --set-tag"
        exit 1
    fi
    download "$GET" "$SET_TAG"
else
    CMD="ficor"
    if [ "$INCLUDE" ]; then
        CMD="$CMD --include $INCLUDE"
    fi
    if [ "$EXCLUDE" ]; then
        CMD="$CMD --exclude $EXCLUDE"
    fi
    if [ "$RANDOMIZE" ]; then
        CMD="$CMD | sort -R"
    fi
    mpv $(eval "$CMD")
fi
